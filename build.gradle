import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "2.2.0"
}

version = project.mod_version+"-${project.property("like_version_"+project.minecraft_version.replace('.','_'))}"
group = project.maven_group
minecraft_version = project.minecraft_version

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "bewisclient" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

sourceSets {
    client {
        java {
            srcDir( 'src/dependent/'+project.property("like_version_"+project.minecraft_version.replace('.','_')).replace('.','_')+"/java" )
            srcDir( 'src/dependent/'+project.property("like_version_"+project.minecraft_version.replace('.','_')).replace('.','_')+"/kotlin" )
        }
        resources {
            srcDir( 'src/dependent/'+project.property("like_version_"+project.minecraft_version.replace('.','_')).replace('.','_')+"/resources" )
        }
    }
}

fabricApi {
    configureDataGeneration {
        client = true
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.property "mappings_"+minecraft_version.replace(".","_")}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.property "fabric_api_"+minecraft_version.replace(".","_")}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

//    include "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "version_range", project.property("range_"+project.property("like_version_"+project.minecraft_version.replace('.','_')).replace('.','_'))

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version, "minecraft_version": inputs.properties.minecraft_version, "version_range": inputs.properties.version_range
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = 21
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    inputs.property "archivesName", project.base.archivesName

    from("LICENSE") {
        rename { "${it}_${inputs.properties.archivesName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

loom {
    accessWidenerPath = file("src/dependent/"+project.property("like_version_"+project.minecraft_version.replace('.','_')).replace('.','_')+"/resources/bewisclient.accesswidener")
}